{"version":3,"file":"4.d18749474176b8b10f19.hot-update.js","sources":["webpack:///ethereum/web3.js"],"sourcesContent":["import Web3 from 'web3';\n\n//const web3 = new Web3(window.web3.currentProvider);  \n// NOTE: using this, window would not be available in nodejs since window object is on the server side. \n// The solution below would check if the user is using a browser with metamask installed so it can grab the web3\n\n\nlet web3; // let -to be able to reassign this variable\n\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {  // executed in a browser and metamask installed in a browser\n    // We are in the browser and metamask is running.\n    web3 = new Web3(window.web3.currentProvider);\n} else {\n    // We are on the server OR the user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n        'URL OF INFURA HERE'\n    );\n    \n    web3 = new Web3(provider);\n}\n\nexport default web3;\n\n\n// WEBPACK FOOTER //\n// ethereum/web3.js"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;A","sourceRoot":""}